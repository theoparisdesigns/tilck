#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-2-Clause

function download_fbdoom {

   if ! [ -f $TC/cache/fbdoom.tgz ]; then

      git clone --depth 1 https://github.com/maximevince/fbDOOM.git
      pushd fbDOOM

      local freedoom="https://github.com/freedoom/freedoom/releases/download"
      wget $freedoom/v0.12.1/freedoom-0.12.1.zip
      unzip freedoom-0.12.1.zip
      mv freedoom-0.12.1 freedoom
      rm freedoom-0.12.1.zip

      pushd freedoom
      gzip freedoom1.wad
      popd
      popd

      tar cfz fbdoom.tgz fbDOOM
      mv fbdoom.tgz $TC/cache
   fi

   extract_cachefile_tar_gz fbdoom.tgz --
}

all_funcs_list+=(build_fbdoom)
function build_fbdoom {

   pushd $ARCH

   if ! [ -d fbDOOM ]; then

      show_work_on_component_msg "FBDOOM"
      reset_cc_vars

      download_fbdoom
      cd fbDOOM

      if [[ "$HOST_ARCH" != "$BUILD_ARCH" ]]; then

         # Case HOST_ARCH == ARCH
         # Note: if HOST_ARCH not in [BUILD_ARCH, ARCH], we fail earlier.
         #
         # Note: NOT TESTED yet.
         # Remember: this scenario (building on $ARCH) is _not_ officially
         # supported.

         export SYS_CC="$CC"
         export SYS_CXX="$CXX"
         export CC_POST_FLAGS="-specs $MUSL_INSTALL/lib/musl-gcc.specs"

      else
         # Default case
         set_cc_vars_to_tc
      fi

      export CROSS_COMPILE="${ARCH_GCC_TC}-linux-"
      export LDFLAGS="-static"

      pushd fbdoom
      run_command2 "make NOSDL=1 -j$BUILD_PAR" build.log
      ${ARCH_GCC_TC}-linux-strip --strip-all fbdoom
      gzip fbdoom
      popd

      export LDFLAGS=""
      export CROSS_COMPILE=""

   else
      show_skip_component_msg "FBDOOM"
   fi

   popd
}
