#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-2-Clause

function download_vim {

   local tarname="vim.tgz"
   local url="https://github.com/vim/vim.git"

   download_git_repo_in_cache "$url" "" $tarname vim
   extract_cachefile_tar_gz $tarname --
}

all_funcs_list+=(build_vim)
function build_vim {

   pushd $ARCH

   if ! [ -d vim ]; then

      show_work_on_component_msg "VIM"
      reset_cc_vars
      local ncurses="$TC/$ARCH/ncurses/install"

      if ! [ -d "$ncurses" ]; then
         echo "ERROR: ncurses is needed to build vim"
         echo "How to fix: run this script with -s build_ncurses first"
         exit 1
      fi

      download_vim
      cd vim

      local curr="$PWD"

      if [[ "$HOST_ARCH" != "$BUILD_ARCH" ]]; then

         # Case HOST_ARCH == ARCH
         # Note: if HOST_ARCH not in [BUILD_ARCH, ARCH], we fail earlier.
         #
         # Remember: this scenario (building on $ARCH) is _not_ officially
         # supported.

         export SYS_CC="$CC"
         export SYS_CXX="$CXX"
         export CC_POST_FLAGS="-specs $MUSL_INSTALL/lib/musl-gcc.specs"

         export CC="$MAIN_DIR/scripts/build_scripts/${ARCH}-gcc"
         export CXX="$MAIN_DIR/scripts/build_scripts/${ARCH}-g++"

      else
         # Default case
         set_cc_vars_to_tc
      fi

      export CFLAGS="-ggdb -Os"
      export LDFLAGS="-static -L$ncurses/lib"
      export CPPFLAGS="-I$ncurses/include/ncurses"

      local c_opts="--with-features=normal"
      run_command2 "./configure --prefix=$curr/install $c_opts" configure.log
      run_command2 "make -j$BUILD_PAR" build.log
      run_command2 "make install" install.log

      pushd install

         cp -r ../runtime .

         pushd runtime
            rm -rf doc lang tutor spell
         popd

         tar cfz vr.tgz runtime
         rm -rf runtime

         gzip -c --best ./bin/vim > vim.gz
         chmod 644 vim.gz
      popd

      export CFLAGS=""
      export LDFLAGS=""
      export CPPFLAGS=""

   else
      show_skip_component_msg "VIM"
   fi

   reset_cc_vars
   popd
}
