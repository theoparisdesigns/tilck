#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-2-Clause

# GLOBAL VARIABLES

# Project's root directory
SOURCE_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
MAIN_DIR="$(cd $SOURCE_DIR/../.. && pwd)"

# Include files
source $MAIN_DIR/scripts/bash_includes/script_utils

function show_help {

   echo ""
   echo "This script will create the directory other_builds and build Tilck and"
   echo "its tests in a variety of configurations, some of which them are not"
   echo "very common. In order to all the builds to succeed, additional "
   echo "packages are expected to be installed in the host system, other than"
   echo -ne "the ones installed by the ${GREEN}build_toolchain${RATTRS} script."
   echo -ne " In addition, the\n"
   echo "script needs to be run multiple times in order to download & build "
   echo "optional components. In particular:"
   echo ""
   echo "   - gcc-multilib (debian package name)"
   echo "         [A version of gcc able to build i386 binaries on x86_64]"
   echo "         [Use your package manager to install that on your system]"
   echo ""
   echo "   - clang and clang++"
   echo "         [Use your package manager to install that on your system]"
   echo ""
   echo "   - toolchain2/host/gtest"
   echo "         [Get with: build_toolchain -s build_gtest]"
   echo ""
   echo "   - toolchain2/i386/gtest"
   echo "         [Get with: build_toolchain -s build_gtest_arch]"
   echo ""
   echo "   - toolchain2/noarch/lcov"
   echo "         [Get with: build_toolchain -s build_lcov]"
   echo ""
   echo "   - toolchain2/i386/musl"
   echo "         [Get with: build_toolchain -s build_libmusl]"
   echo ""
   echo "Build configurations that will be generated and built:"

   for x in $MAIN_DIR/scripts/build_generators/*; do
      echo "   - $(basename $x)"
   done

   echo ""
   echo -ne "${RED}WARNING${RATTRS}: if you're new to Tilck, that's probably "
   echo -ne "${RED}not${RATTRS} the script you're looking\nfor. "
   echo -ne "${BROWN}Check out${RATTRS} the docs/building.md file for info "
   echo -ne "about how to build Tilck and\nthe docs/testing.md file for info "
   echo -ne "about how to run its tests.\n"
   echo ""
}

function ask_confirm {

   show_help
   echo -n "Proceed [y/N] ? "
   read answer

   if [[ "$answer" != "y" ]]; then
      exit 0
   fi
}

#############################################
# MAIN CODE

# Exit on any error
set -e

if [[ "$1" == "-h" || "$1" == "--help" ]]; then
   show_help
   exit 0
fi

if [[ "$1" != "-y" ]]; then
   ask_confirm
fi

mkdir -p $MAIN_DIR/other_builds
cd $MAIN_DIR/other_builds

for gen_script in $MAIN_DIR/scripts/build_generators/*; do

   name=$(basename $gen_script)
   echo "************ Build: $name ************"
   mkdir -p $name
   pushd $name
   $gen_script
   make -j 4
   make -j 4 gtests
   popd

done

